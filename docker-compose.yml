services:
  servicedawa:  # Primer microservicio
    build:
      context: ./ws_dawa
      dockerfile: dockerfile
    image: service-dawa-image
    volumes:
      - ./ws_dawa/:/app
    ports:
      - "1100:1008"
    networks:
      - app-network
    # depends_on:
    #   db:
    #     condition: service_healthy

  # serviceS:  # Segundo microservicio
  #   build:
  #     context: ./serviceSeguridad
  #     dockerfile: dockerfile
  #   image: service-seguridad-image
  #   volumes:
  #     - ./serviceSeguridad/static:/app/static
  #   ports:
  #     - "5002:5002"
  #   networks:
  #     - app-network
  #   depends_on:
  #     db:
  #       condition: service_healthy
  
  # serviceP:  # Tercer microservicio
  #   build:
  #     context: ./servicePacientes
  #     dockerfile: dockerfile
  #   image: service-pacientes-image
  #   volumes:
  #     - ./servicePacientes/static:/app/static
  #   ports:
  #     - "5003:5003"
  #   networks:
  #     - app-network
  #   depends_on:
  #     db:
  #       condition: service_healthy

  # db:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: Foxhound2912
  #     POSTGRES_DB: proyectodawa
  #   command: >
  #     bash -c "
  #     echo 'host all all all md5' >> /var/lib/postgresql/data/pg_hba.conf
  #     && docker-entrypoint.sh postgres
  #     "
  #   volumes:
  #     - ./db_data:/var/lib/postgresql/data
  #     # - ./backup.sql:/docker-entrypoint-initdb.d/init.sql
  #   ports:
  #     - "5433:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - app-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: dockerfile
    ports:
      - "5173:80"  # Puerto de Vite
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - servicedawa

networks:
  app-network:
    driver: bridge

volumes:
  db_data: